[{"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\index.js":"1","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\App.js":"2","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\index.js":"3","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\AuthReducer.js":"4","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\NotesReducer.js":"5","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Home.js":"6","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Register.js":"7","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Login.js":"8","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Dashboard.js":"9","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavBar.js":"10","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\GoogleSignIn.js":"11","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\ColorDots.js":"12","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NoteCard.js":"13","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NewNoteModal.js":"14","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Notes.js":"15","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\actions\\authActions.js":"16","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\actions\\notesActions.js":"17","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NotesBlock.js":"18","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavLinks\\NavLinks.js":"19","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavLinks\\AuthLinks.js":"20","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\PasswordReset.js":"21"},{"size":667,"mtime":1611831803305,"results":"22","hashOfConfig":"23"},{"size":917,"mtime":1612449082597,"results":"24","hashOfConfig":"23"},{"size":239,"mtime":1611831804162,"results":"25","hashOfConfig":"23"},{"size":1102,"mtime":1611831804094,"results":"26","hashOfConfig":"23"},{"size":989,"mtime":1611831804122,"results":"27","hashOfConfig":"23"},{"size":1906,"mtime":1612446634876,"results":"28","hashOfConfig":"23"},{"size":3516,"mtime":1611831803972,"results":"29","hashOfConfig":"23"},{"size":3496,"mtime":1612449176803,"results":"30","hashOfConfig":"23"},{"size":1429,"mtime":1611838850046,"results":"31","hashOfConfig":"23"},{"size":2610,"mtime":1612176922229,"results":"32","hashOfConfig":"23"},{"size":956,"mtime":1611831803697,"results":"33","hashOfConfig":"23"},{"size":782,"mtime":1611831803628,"results":"34","hashOfConfig":"23"},{"size":4016,"mtime":1612278723472,"results":"35","hashOfConfig":"23"},{"size":3769,"mtime":1611838906435,"results":"36","hashOfConfig":"23"},{"size":847,"mtime":1611843665458,"results":"37","hashOfConfig":"23"},{"size":3074,"mtime":1612280643708,"results":"38","hashOfConfig":"23"},{"size":3444,"mtime":1612176395594,"results":"39","hashOfConfig":"23"},{"size":510,"mtime":1611831803933,"results":"40","hashOfConfig":"23"},{"size":554,"mtime":1611831804044,"results":"41","hashOfConfig":"23"},{"size":1203,"mtime":1612446606411,"results":"42","hashOfConfig":"23"},{"size":741,"mtime":1612451772052,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vtlad6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"46"},"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\index.js",[],["100","101"],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\App.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\index.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\AuthReducer.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\reducers\\NotesReducer.js",["102"],"\nimport axios from \"axios\";\n\nconst initialState = {\n  currentColor: \"white\",\n  errorMessage: \"\",\n  notes: [], \n  loading: false\n}\n\nconst NotesReducer = (state = initialState, action) => {\n  switch(action.type) {\n\n      case \"SET_LOADING\":\n        return {\n          ...state,\n          loading: action.payload\n        }\n\n      case \"CLEAR_NOTES\":\n        return {\n          ...state,\n          notes: []\n        }\n\n      case \"CHANGE_COLOR\":\n        return {\n          ...state,\n          currentColor: action.payload\n        }\n      \n      // when all the notes are retrieved, append each one to the notes array\n      // state.notes is emptied first to stop duplicate data\n      case \"ADD_NOTE\":\n        return {\n          ...state,\n          notes: [...state.notes, action.payload]\n        }\n\n      case \"TEMP_STORE\":\n        return {\n          ...state,\n          notes: [...state.notes, action.payload]\n        }\n\n      default:\n        return state\n  }\n}\n\nexport default NotesReducer;","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Home.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Register.js",["103","104","105","106","107"],"import React, {Component} from \"react\";\nimport NavBar from \"./NavBar\";\nimport TextField from '@material-ui/core/TextField';\nimport {Button, Link} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport GoogleSignIn from \"./GoogleSignIn\";\nimport axios from \"axios\";\nimport {register, loadUser} from \"../actions/authActions\";\nimport {useDispatch} from \"react-redux\";\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport Alert from '@material-ui/lab/Alert';\nimport {withCookies, useCookies} from \"react-cookie\";\nimport {connect} from \"react-redux\"\nimport { compose } from \"redux\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#49334a\"\n    }\n  }\n});\n\nclass Register extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: \"\",\n      userName: \"\",\n      password: \"\",\n      isLoading: true\n    }\n  }\n\n  emailHandler = (e) => {\n    this.setState({email: e.target.value});\n  }\n\n  userNameHandler = (e) => {\n    this.setState({userName: e.target.value});\n  }\n\n  passwordHandler = (e) => {\n    this.setState({password: e.target.value});\n  }\n\n  submit = () => {\n    this.props.register(\n      this.state.email,\n      this.state.userName,\n      this.state.password\n    )\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    \n    if (token) {\n      setTimeout(() => {\n        if (this.props.user) {\n          this.props.history.push(\"/dashboard\");\n        } else {\n          this.props.loadUser(token, userId)\n          // wait for the user to be authenticated before the loading is stopped\n          if (this.props.isAuthenticated) {\n            this.setState({isLoading: false})\n          }\n        } \n      }, 1000)\n    } else {\n      this.setState({isLoading: false})\n    }\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return (\n        <Redirect to=\"/dashboard\" />\n      ) \n    } else if (this.state.isLoading){\n      return <CircularProgress />\n    } else {\n      return (\n        <div className=\"register-div\">\n          <NavBar title=\"Note Base\" />\n          <div className=\"text-inputs\">\n            <h3 style={{color: \"#49334a\", marginBottom: \"20px\"}}>\n              Register a free account\n            </h3>\n            <ThemeProvider theme={theme}>\n              <TextField style={{marginBottom: \"20px\"}} type=\"email\" label=\"Email\" onChange={this.emailHandler} />\n              <TextField style={{marginBottom: \"20px\"}} type=\"text\" label=\"Username\" onChange={this.userNameHandler} />\n              <TextField style={{marginBottom: \"20px\"}} type=\"password\" label=\"Password\" onChange={this.passwordHandler} />\n            </ThemeProvider>\n              <Button onClick={this.submit} variant=\"outlined\" color=\"secondary\" style={{fontSize: \"16px\", marginTop: \"30px\"}}>\n                  Register\n              </Button>\n              <h3 style={{marginTop: \"30px\", marginBottom: \"20px\", color: \"#49334a\"}}>\n                Or\n              </h3>\n              <GoogleSignIn />\n              <Link className=\"login-link\" href=\"/login\">\n                Already have an account?\n              </Link>\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {register, loadUser})\n)(Register);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Login.js",["108"],"import React, {Component} from \"react\";\nimport GoogleSignIn from \"./GoogleSignIn\";\nimport TextField from '@material-ui/core/TextField';\nimport {Button, Link} from \"@material-ui/core\";\nimport {login, loadUser} from \"../actions/authActions\";\nimport NavBar from \"./NavBar\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport Fade from '@material-ui/core/Fade';\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\"\nimport { compose } from \"redux\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#49334a\"\n    }\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      userName: \"\",\n      password: \"\",\n      isLoading: true\n    }\n  }\n\n  userNameHandler = (e) => {\n    this.setState({userName: e.target.value});\n  }\n\n  passwordHandler = (e) => {\n    this.setState({password: e.target.value});\n  }\n\n  submit = () => {\n    this.props.login(this.state.userName, this.state.password);\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const userId = localStorage.getItem(\"userId\");\n    \n    if (token) {\n      setTimeout(() => {\n        if (this.props.user) {\n          this.props.history.push(\"/dashboard\");\n        } else {\n          this.props.loadUser(token, userId)\n          // wait for the user to be authenticated before the loading is stopped\n          if (this.props.isAuthenticated) {\n            this.setState({isLoading: false})\n          }\n        } \n      }, 1000)\n    } else {\n      this.setState({isLoading: false})\n    }\n  }\n\n  render() {\n    if (this.props.isAuthenticated) {\n      return (\n        <Redirect to=\"/dashboard\" />\n      ) \n    } else if (this.state.isLoading){\n      return <CircularProgress />\n    } else {\n      return (\n        <>\n        <Fade in={true}>\n          <div className=\"login-div\">\n            <NavBar title=\"Note Base\" />\n            <div className=\"text-inputs\">\n              <h3 style={{margin: \"20px auto\", color: \"#49334a\", marginBottom: \"40px\"}}>\n                Login with account\n              </h3>\n              <ThemeProvider theme={theme}>\n                <TextField style={{marginBottom: \"20px\"}} onChange={this.userNameHandler} label=\"Username\" variant=\"outlined\" />\n                <TextField type=\"password\" onChange={this.passwordHandler} label=\"Password\" variant=\"outlined\" />\n              </ThemeProvider>\n              <Link href=\"/password-reset\">\n                <h3 href=\"/password-reset\" style={{textAlign: \"center\", color: \"#49334a\", marginTop: \"20px\", cursor: \"pointer\"}}>forgot password?</h3>\n              </Link>\n              \n              <Button variant=\"outlined\" color=\"secondary\" onClick={this.submit} style={{fontSize: \"16px\", marginTop: \"40px\"}}>\n                  Login\n              </Button>\n              <h3 style={{marginTop: \"20px\", color: \"#49334a\"}}>\n                Or\n              </h3>\n              <GoogleSignIn />\n              <Link className=\"register-link\" href=\"/register\">\n              Need an account?\n            </Link>\n            </div> \n          </div>\n          </Fade>\n        </>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {login, loadUser})\n)(Login);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Dashboard.js",["109","110","111","112","113","114","115","116","117","118","119"],"import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport NavBar from \"./NavBar\";\nimport {withRouter, Redirect} from \"react-router-dom\";\nimport {getNotes, setColor, submitNote, clearNotes} from \"../actions/notesActions\";\nimport {compose} from \"redux\";\nimport NoteCard from \"./NoteCard\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Modal from '@material-ui/core/Modal';\nimport {Button} from \"@material-ui/core\";\nimport Fade from '@material-ui/core/Fade';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport ColorDots from \"./ColorDots\";\nimport NewNoteModal from \"./NewNoteModal\";\nimport Notes from \"./Notes\";\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#49334a\"\n    }\n  }\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props) \n  }\n  \n  render() {\n    if (this.props.auth.isAuthenticated) {\n      return (\n        <div>\n          <NavBar title=\"Note Base\" />\n          <NewNoteModal />\n          <Notes />\n        </div>\n      )\n    } else {\n      return (\n        <Redirect to=\"/\" />\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  notes: state.notes\n})\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, {getNotes, setColor, submitNote, clearNotes})\n)(Dashboard);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavBar.js",["120","121","122","123","124","125","126"],"import React, {useState} from \"react\";\nimport {AppBar, Toolbar, IconButton, Typography, Button, Drawer, Link} from \"@material-ui/core\"\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport {Menu} from \"@material-ui/icons\";\nimport {connect} from \"react-redux\";\nimport Avatar from '@material-ui/core/Avatar';\nimport {logout} from \"../actions/authActions\";\nimport {useDispatch} from \"react-redux\";\nimport Redirect from \"react-router-dom\";\nimport NavLinks from \"./NavLinks/NavLinks\";\nimport AuthLinks from \"./NavLinks/AuthLinks\";\n\nclass NavBar extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isOpen: false\n    }\n  }\n\n  handleDrawer = () => {\n    this.setState({\n      isOpen: true\n    })\n  }\n\n  closeDrawer = () => {\n    this.setState({\n      isOpen: false\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar position=\"static\" style={{backgroundColor: \"#49334a\"}}>\n          <Toolbar>\n            <IconButton style={{color: \"white\"}} onClick={this.handleDrawer} edge=\"start\" arial-label=\"menu\" >\n              <Menu />\n            </IconButton>\n            <div style={{flexGrow: 1, marginTop: \"5px\"}}>\n              <Typography variant=\"h5\" style={{textAlign: \"center\", paddingRight: \"40px\"}}>\n                {this.props.title}\n              </Typography>\n            </div>\n            <div className=\"account-info\">\n            {\n              this.props.isAuthenticated ? \n              <>\n                <h2 className=\"account-name\" style={{fontSize: \"20px\", color: \"#f50057\", marginLeft: \"10px\", verticalAlign: \"middle\"}}>{this.props.user.userName}</h2>\n                <Avatar className=\"account-img\" src={this.props.user.imageUrl} />\n              </>\n              :\n              null\n            }\n            </div>\n          </Toolbar>\n        </AppBar>\n\n        <Drawer \n          anchor=\"left\"\n          open={this.state.isOpen}\n          onClose={this.closeDrawer}\n        >\n          <div className=\"drawer-div\">\n          {\n            !this.props.isAuthenticated ? \n            <Link href=\"/\">\n              <h2 className=\"drawer-header\"> - Note Base - </h2>\n            </Link>\n            :\n             null \n          }\n            <div className=\"nav-links\">\n              {this.props.isAuthenticated ? <AuthLinks user={this.props.user} /> : <NavLinks />}\n            </div>\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  user: state.auth.user\n})\n\nexport default connect(mapStateToProps, {})(NavBar);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\GoogleSignIn.js",["127","128"],"import React from \"react\";\nimport GoogleLogin from 'react-google-login';\nimport axios from \"axios\";\nimport {useDispatch} from \"react-redux\";\nimport {googleLogin} from \"../actions/authActions\";\nimport { withRouter } from 'react-router-dom';\nimport {useCookies} from \"react-cookie\";\n\nconst GoogleSignIn = (props) => {\n  const dispatch = useDispatch()\n    \n  const responseGoogle = (response) => {\n    const userData = response.profileObj;\n    dispatch(googleLogin(userData));\n  }\n\n  const failureResponse = (response) => {\n    console.log(response);\n  }\n\n  return (\n    <div style={{margin: \"20px auto\", width: \"203px\"}}>\n      <GoogleLogin \n        clientId=\"241327774156-fuqsjbfvege5bda7vg0dumrtdfensaqn.apps.googleusercontent.com\"\n        buttonText=\"Continue with Google\"\n        onSuccess={responseGoogle}\n        onFailure={failureResponse}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(GoogleSignIn);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\ColorDots.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NoteCard.js",["129","130","131"],"import React, {Component} from \"react\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport {deleteNote, setColor, editNote} from \"../actions/notesActions\";\nimport {connect} from \"react-redux\";\nimport Fade from '@material-ui/core/Fade';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport {Button} from \"@material-ui/core\";\nimport ColorDots from \"./ColorDots\";\nimport $ from 'jquery'\n\nclass NoteCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      modelOpen: false,\n      editData: {},\n      title: this.props.data.title,\n      content: this.props.data.content\n    }\n  }\n\n  deleteNote = (id) => {\n    $(\".note-card-fade\").fadeOut(3000);\n    const token = localStorage.getItem(\"token\");\n    this.props.deleteNote(token, id);\n  } \n\n  editNote = (id) => {\n    this.setState({modelOpen: true, editData: this.props.data});\n    console.log(id);\n    this.props.notes.notes.map(note => {\n      if (note._id == id) {\n        this.props.setColor(note.color);\n      }\n    });\n  }\n\n  submit = () => {\n    console.log(\"test\");\n    const {title, content} = this.state;\n    const color = this.props.notes.currentColor;\n    const createdBy = this.props.user._id;\n    const token = localStorage.getItem(\"token\");\n\n    this.props.editNote(token, this.props.data._id, title, content, color);\n    this.close();\n  }\n\n  close = () => {\n    this.setState({modelOpen: false});\n    this.props.setColor(\"white\");\n  }\n\n  componentDidMount() {\n    this.props.setColor(this.props.data.color);\n  }\n\n  titleHandler = (e) => {\n    this.setState({title: e.target.value});\n  }\n\n  contentHandler = (e) => {\n    this.setState({content: e.target.value});\n  }\n\n  render() {\n    return (\n      <div className=\"note-card-fade\">\n        <Fade in={this.state.open}>\n          <div style={{backgroundColor: this.props.data.color}} className=\"note-card\">\n            <div className=\"card-header\">\n              <h3 style={{fontSize: \"24px\", textDecoration: \"underline\"}}>{this.props.data.title}</h3>\n              <div style={{cursor: \"pointer\", marginLeft: \"auto\", marginTop: \"4px\", marginRight: \"4px\"}} onClick={() => this.editNote(this.props.data._id)}>\n                <EditIcon />\n              </div>\n              <div style={{cursor: \"pointer\", marginTop: \"4px\"}} onClick={() => this.deleteNote(this.props.data._id)}>\n                <CloseIcon />\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <h5 style={{fontSize: \"18px\"}}>{this.props.data.content}</h5>\n            </div> \n          </div>\n        </Fade>\n        <Modal open={this.state.modelOpen}>\n          <div>\n            <div style={{backgroundColor: this.props.notes.currentColor}} className=\"new-note-div\">\n              <div className=\"new-note-header\">\n                <h3>Create a new note</h3>\n              </div>\n              <div className=\"new-note-inputs\">\n                <TextField onChange={this.titleHandler} className=\"note-input\" style={{marginBottom: \"20px\"}} label=\"Title...\" variant=\"outlined\" color=\"secondary\" value={this.state.title} />\n                <TextField onChange={this.contentHandler} className=\"note-input\" label=\"Notes...\" variant=\"outlined\" multiline rows={5} color=\"secondary\" value={this.state.content} />\n              </div>\n              <ColorDots />\n              <div className=\"submit-button\">\n                <Button onClick={this.submit} variant=\"outlined\" color=\"secondary\">\n                  Update\n                </Button>\n                <Button onClick={this.close} variant=\"outlined\" color=\"secondary\">\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n  \nconst mapStateToProps = (state) => ({\n  notes: state.notes,\n  user: state.auth.user\n})\n\nexport default connect(mapStateToProps, {deleteNote, setColor, editNote})(NoteCard);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NewNoteModal.js",["132","133","134","135","136","137","138","139","140","141","142","143","144"],"import React, {useState} from \"react\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport NavBar from \"./NavBar\";\nimport {useCookies} from \"react-cookie\";\nimport {withRouter} from \"react-router-dom\";\nimport {storeNotes} from \"../actions/notesActions\";\nimport Modal from '@material-ui/core/Modal';\nimport {Button} from \"@material-ui/core\";\nimport NotesBlock from \"./NotesBlock\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport Fade from '@material-ui/core/Fade';\nimport CloseIcon from '@material-ui/icons/Close';\nimport TextField from '@material-ui/core/TextField';\nimport ColorDots from \"./ColorDots\";\nimport {setColor, submitNote} from \"../actions/notesActions\";\nimport axios from \"axios\";\nimport { withCookies, Cookies } from 'react-cookie';\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: \"#49334a\"\n    }\n  }\n});\n\nclass NewNoteModal extends React.Component {\n  constructor(props) {\n    super(props) \n    this.state = {\n      open: false,\n      title: \"\",\n      content: \"\",\n      isLoaded: false\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({open: true});\n  }\n\n  handleClose = () => {\n    this.setState({open: false});\n    this.props.setColor(\"white\");\n  }\n\n  titleHandler = (e) => {\n    this.setState({title: e.target.value});\n  }\n\n  contentHandler = (e) => {\n    this.setState({content: e.target.value});\n  }\n\n  submit = () => {\n    this.handleClose();\n    \n    const color = this.props.notes.currentColor;\n    const token = localStorage.getItem(\"token\");\n    \n    // used to check if the user is signed in with google or note\n    // if using _id is undefined, then it must change to userId\n    let createdBy = this.props.auth.user._id;\n    createdBy = createdBy == undefined ? this.props.auth.userId : createdBy;\n\n    \n\n    this.props.submitNote(\n      token,\n      this.state.title,\n      this.state.content,\n      createdBy,\n      color\n    )\n\n    this.setState({isLoaded: true})\n  }\n\n  render() {\n    return (\n      <div>\n        <ThemeProvider theme={theme}>\n          <div className=\"add-button\">\n            <Button onClick={this.handleOpen} variant=\"outlined\" color=\"secondary\">\n              <AddIcon /> New\n            </Button> \n          </div>\n          <Modal open={this.state.open}> \n            <div>\n              <div style={{backgroundColor: this.props.notes.currentColor}} className=\"new-note-div\">\n                <div className=\"new-note-header\">\n                  <h3>Create a new note</h3>\n                </div>\n                <div className=\"new-note-inputs\">\n                  <TextField onChange={this.titleHandler} className=\"note-input\" style={{marginBottom: \"20px\"}} label=\"Title...\" variant=\"outlined\" color=\"secondary\" />\n                  <TextField onChange={this.contentHandler} className=\"note-input\" label=\"Notes...\" variant=\"outlined\" multiline rows={5} color=\"secondary\" />\n                </div>\n                <ColorDots />\n                <div className=\"submit-button\">\n                  <Button onClick={this.submit} variant=\"outlined\" color=\"secondary\">\n                  Submit\n                  </Button>\n                  <Button onClick={this.handleClose} variant=\"outlined\" color=\"secondary\">\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </Modal>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  notes: state.notes\n})\n\nexport default compose(\n  withRouter,\n  withCookies,\n  connect(mapStateToProps, {setColor, submitNote})\n)(NewNoteModal);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\Notes.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\actions\\authActions.js",["145","146","147","148"],"\nimport { ErrorRounded } from \"@material-ui/icons\";\nimport axios from \"axios\";\n\n// load a user from a JWT being decoded server side\nexport const loadUser = (token, userId) => {\n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true});\n\n    const config = {\n      headers: {\n        authorization: token\n      }\n    }\n\n    const body = {\n      userId\n    }\n\n    axios\n    .post(\"http://localhost:8000/api/users/\", body, config)\n    .then((response) => {\n      dispatch({type: \"LOAD_USER\", payload: response.data.user})\n      dispatch({type: \"SET_LOADING\", payload: false})\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  } \n}\n\nexport const login = (userName, password) => {\n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true});\n    const body = {\n      userName, password\n    }\n\n    axios.post(\"http://localhost:8000/api/users/login\", body)\n    .then((response) => {\n      const token = response.data.token.toString();\n      const userId = response.data.user.userId.toString();\n      localStorage.setItem(\"token\", response.data.token.toString())\n      localStorage.setItem(\"userId\", userId);\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: response.data.user\n      })\n      dispatch({type: \"SET_LOADING\", payload: false});\n    })\n    .catch((err) => {\n      const errorMsg = err.response.data.message;\n      console.log(errorMsg);\n    })\n  }\n}\n\nexport const register = (email, userName, password) => {\n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true});\n\n    const body = {\n      email, userName, password\n    }\n\n    axios.post(\"http://localhost:8000/api/users/register\", body)\n    .then((response) => {\n      const token = response.data.token.toString();\n      const userId = response.data.user.userId.toString();\n      localStorage.setItem(\"token\", response.data.token.toString())\n      localStorage.setItem(\"userId\", userId);\n      dispatch({\n        type: \"REGISTER_SUCCESS\",\n        payload: response.data.user\n      })\n      dispatch({type: \"SET_LOADING\", payload: false});\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n}\n\nexport const googleLogin = (userData) => {\n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true})\n\n    const body = {\n      googleId: userData.googleId,\n      email: userData.email,\n      userName: userData.givenName,\n      imageUrl: userData.imageUrl\n    }\n\n    axios.post(\"http://localhost:8000/api/users/google\", body)\n    .then((response) => {\n      const token = response.data.token.toString();\n      const userId = response.data.user.userId.toString();\n      localStorage.setItem(\"token\", response.data.token.toString())\n      localStorage.setItem(\"userId\", userId);\n      dispatch({\n        type: \"LOGIN_SUCCESS\", \n        payload: response.data.user\n      })\n      dispatch({type: \"SET_LOADING\", payload: false})\n    })\n    .catch((err) => {\n      console.log(err);\n    })\n  }\n}\n\nexport const updateUser = (userName, email) => {\n\n}\n\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\"\n  }\n}\n\n\n\n","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\actions\\notesActions.js",["149","150","151"],"\nimport axios from \"axios\";\n\nexport const storeNote = (note) => {\n  return {\n    type: \"ADD_NOTE\",\n    payload: note\n  }\n}\n\nexport const clearNotes = () => {\n  return {\n    type: \"CLEAR_NOTES\"\n  }\n}\n\nexport const getNotes = (token, createdBy) => {\n  \n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true})\n\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n\n    axios\n      .get(`http://localhost:8000/api/notes/${createdBy}`, config)\n      .then(response => {\n        response.data.notes.map(note => {\n          dispatch(storeNote(note))\n          dispatch({type: \"SET_LOADING\", payload: false})\n        })\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n}\n\nexport const submitNote = (token, title, content, createdBy, color) => {\n\n  return (dispatch) => {\n    dispatch({type: \"SET_LOADING\", payload: true});\n\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n\n    const body = {\n      title, content, createdBy, color\n    }\n\n    axios\n      .post(\"http://localhost:8000/api/notes/add\", body, config)\n      .then((response) => {\n        dispatch({type: \"SET_LOADING\", payload: false})\n        dispatch({type: \"TEMP_STORE\", payload: response.data.note})\n        dispatch({type: \"CHANGE_COLOR\", payload: \"White\"});\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n}\n\nexport const editNote = (token, id, title, content, color) => {\n  return (dispatch, getState) => {\n    dispatch({type: \"SET_LOADING\", payload: true})\n\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n\n    const body = {\n      id, title, content, color \n    }\n\n    axios\n      .post(\"http://localhost:8000/api/notes/update\", body, config)\n      .then((response) => {\n        const {notes} = getState().notes;\n        \n        // map through the notes and find the corrosponding note to the one being updated\n        // then swap the note at the index where it is found with the updated on\n        // the match is made using the note id\n        notes.map((note, index) => {\n          if (note._id === response.data.note._id) {\n            notes[index] = response.data.note;\n          }\n        })\n\n        dispatch({type: \"CHANGE_COLOR\", payload: \"white\"});\n        dispatch({type: \"SET_LOADING\", payload: false});\n      })\n      .catch((err) => console.log(err));\n  }\n}\n\nexport const deleteNote = (token, id) => {\n  return (dispatch, getState) => {\n    dispatch({type: \"SET_LOADING\", payload: true});\n\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n\n    const body = {\n      _id: id\n    }\n\n    axios\n      .post(\"http://localhost:8000/api/notes/delete\", body, config)\n      .then((response) => {\n        const {notes} = getState().notes;\n        // cleare the deleted note from the redux store \n        // this will remove the note from the dashboard and cause a re-render\n        notes.map((note, index) => {\n          if (notes[index]._id === response.data._id) {\n            notes.splice(index, 1)\n          }\n        })\n        dispatch({type: \"SET_LOADING\", payload: false});\n        dispatch({type: \"CHANGE_COLOR\", payload: \"white\"});\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n}\n\n// action to set the default color of the add note model background\nexport const setColor = (color) => {\n  return {\n    type: \"CHANGE_COLOR\",\n    payload: color\n  }\n\n}","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NotesBlock.js",["152","153"],"import React from \"react\";\nimport NoteCard from \"./NoteCard\";\n\nclass NotesBlock extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n    <>\n      {\n        this.props.notes.map(note => {\n          if (note !== null && typeof note !== \"undefined\") {\n            return (\n              <NoteCard key={note._id} color={note.color} title={note.title} content={note.content} />\n            )\n          }\n        })\n      }\n    </>\n  )\n  }\n  \n}\n\nexport default NotesBlock;","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavLinks\\NavLinks.js",[],"C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\NavLinks\\AuthLinks.js",["154","155"],"import React from \"react\";\nimport Avatar from '@material-ui/core/Avatar';\nimport {logout} from \"../../actions/authActions\";\nimport {useDispatch} from \"react-redux\";\nimport {Link} from \"@material-ui/core\";\nimport {withRouter} from \"react-router-dom\";\nimport {useCookies} from \"react-cookie\";\n\nconst AuthLinks = (props) => {\n  const dispatch = useDispatch();\n  const [cookies, setCookie, removeCookie] = useCookies([]);\n\n  const logoutUser = () => {\n    dispatch(logout())\n    removeCookie(\"token\");\n    props.history.push(\"/\");\n  }\n\n  return (\n    <>\n      <div className=\"account-header\">\n        <Avatar src={props.user.imageUrl} />\n        <h2 style={{fontSize: \"20px\", color: \"#f50057\", marginLeft: \"10px\", verticalAlign: \"middle\"}}>{props.user.userName}</h2>\n      </div>\n      <Link className=\"nav-link\" id=\"home-link\" href=\"/dashboard\">\n        Dashboard\n      </Link> \n      <Link className=\"nav-link\" id=\"github-link\" href=\"https://github.com\">\n        Github Repo\n      </Link> \n      <Link className=\"nav-link\" href=\"/privacy\">\n        Privacy\n      </Link>\n      <Link className=\"nav-link\" onClick={logoutUser}>\n       Logout\n      </Link>\n    </>\n  )\n}\n\nexport default withRouter(AuthLinks);","C:\\Users\\jayde\\Documents\\projects\\note-app-master\\client\\src\\components\\PasswordReset.js",["156"],"import react, {Component} from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Button} from \"@material-ui/core\";\r\n\r\nclass PasswordReset extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavBar title=\"Reset Password\" />\r\n        <div className=\"password-reset\">\r\n          <h3 style={{color: \"#49334a\", marginBottom: \"20px\", textAlign: \"center\"}}>Please Enter Your Email Address or Username:</h3>\r\n          <TextField style={{marginBottom: \"20px\"}} color=\"secondary\" variant=\"outlined\" label=\"Email or Username\" />\r\n          <Button variant=\"outlined\" color=\"secondary\">Submit</Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PasswordReset;",{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":13},{"ruleId":"161","severity":1,"message":"162","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":13},{"ruleId":"161","severity":1,"message":"165","line":9,"column":9,"nodeType":"163","messageId":"164","endLine":9,"endColumn":20},{"ruleId":"161","severity":1,"message":"166","line":11,"column":8,"nodeType":"163","messageId":"164","endLine":11,"endColumn":13},{"ruleId":"161","severity":1,"message":"167","line":12,"column":9,"nodeType":"163","messageId":"164","endLine":12,"endColumn":20},{"ruleId":"161","severity":1,"message":"168","line":12,"column":22,"nodeType":"163","messageId":"164","endLine":12,"endColumn":32},{"ruleId":"161","severity":1,"message":"166","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":13},{"ruleId":"161","severity":1,"message":"169","line":7,"column":8,"nodeType":"163","messageId":"164","endLine":7,"endColumn":16},{"ruleId":"161","severity":1,"message":"170","line":8,"column":8,"nodeType":"163","messageId":"164","endLine":8,"endColumn":15},{"ruleId":"161","severity":1,"message":"171","line":9,"column":26,"nodeType":"163","messageId":"164","endLine":9,"endColumn":39},{"ruleId":"161","severity":1,"message":"172","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":13},{"ruleId":"161","severity":1,"message":"173","line":11,"column":9,"nodeType":"163","messageId":"164","endLine":11,"endColumn":15},{"ruleId":"161","severity":1,"message":"174","line":12,"column":8,"nodeType":"163","messageId":"164","endLine":12,"endColumn":12},{"ruleId":"161","severity":1,"message":"175","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":17},{"ruleId":"161","severity":1,"message":"176","line":14,"column":8,"nodeType":"163","messageId":"164","endLine":14,"endColumn":17},{"ruleId":"161","severity":1,"message":"177","line":15,"column":8,"nodeType":"163","messageId":"164","endLine":15,"endColumn":17},{"ruleId":"161","severity":1,"message":"178","line":19,"column":7,"nodeType":"163","messageId":"164","endLine":19,"endColumn":12},{"ruleId":"179","severity":1,"message":"180","line":28,"column":3,"nodeType":"181","messageId":"182","endLine":30,"endColumn":4},{"ruleId":"161","severity":1,"message":"183","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":24},{"ruleId":"161","severity":1,"message":"173","line":2,"column":50,"nodeType":"163","messageId":"164","endLine":2,"endColumn":56},{"ruleId":"161","severity":1,"message":"184","line":3,"column":10,"nodeType":"163","messageId":"164","endLine":3,"endColumn":26},{"ruleId":"161","severity":1,"message":"185","line":3,"column":28,"nodeType":"163","messageId":"164","endLine":3,"endColumn":42},{"ruleId":"161","severity":1,"message":"186","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":15},{"ruleId":"161","severity":1,"message":"165","line":8,"column":9,"nodeType":"163","messageId":"164","endLine":8,"endColumn":20},{"ruleId":"161","severity":1,"message":"187","line":9,"column":8,"nodeType":"163","messageId":"164","endLine":9,"endColumn":16},{"ruleId":"161","severity":1,"message":"162","line":3,"column":8,"nodeType":"163","messageId":"164","endLine":3,"endColumn":13},{"ruleId":"161","severity":1,"message":"168","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":19},{"ruleId":"188","severity":1,"message":"189","line":34,"column":37,"nodeType":"190","messageId":"191","endLine":34,"endColumn":39},{"ruleId":"192","severity":1,"message":"193","line":35,"column":20,"nodeType":"194","messageId":"195","endLine":35,"endColumn":22},{"ruleId":"161","severity":1,"message":"196","line":45,"column":11,"nodeType":"163","messageId":"164","endLine":45,"endColumn":20},{"ruleId":"161","severity":1,"message":"183","line":1,"column":16,"nodeType":"163","messageId":"164","endLine":1,"endColumn":24},{"ruleId":"161","severity":1,"message":"197","line":2,"column":9,"nodeType":"163","messageId":"164","endLine":2,"endColumn":20},{"ruleId":"161","severity":1,"message":"165","line":2,"column":22,"nodeType":"163","messageId":"164","endLine":2,"endColumn":33},{"ruleId":"161","severity":1,"message":"187","line":3,"column":9,"nodeType":"163","messageId":"164","endLine":3,"endColumn":17},{"ruleId":"161","severity":1,"message":"198","line":4,"column":8,"nodeType":"163","messageId":"164","endLine":4,"endColumn":14},{"ruleId":"161","severity":1,"message":"168","line":5,"column":9,"nodeType":"163","messageId":"164","endLine":5,"endColumn":19},{"ruleId":"161","severity":1,"message":"199","line":7,"column":9,"nodeType":"163","messageId":"164","endLine":7,"endColumn":19},{"ruleId":"161","severity":1,"message":"200","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":18},{"ruleId":"161","severity":1,"message":"174","line":13,"column":8,"nodeType":"163","messageId":"164","endLine":13,"endColumn":12},{"ruleId":"161","severity":1,"message":"175","line":14,"column":8,"nodeType":"163","messageId":"164","endLine":14,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":18,"column":8,"nodeType":"163","messageId":"164","endLine":18,"endColumn":13},{"ruleId":"161","severity":1,"message":"201","line":19,"column":23,"nodeType":"163","messageId":"164","endLine":19,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":69,"column":27,"nodeType":"194","messageId":"195","endLine":69,"endColumn":29},{"ruleId":"161","severity":1,"message":"202","line":2,"column":10,"nodeType":"163","messageId":"164","endLine":2,"endColumn":22},{"ruleId":"161","severity":1,"message":"203","line":41,"column":13,"nodeType":"163","messageId":"164","endLine":41,"endColumn":18},{"ruleId":"161","severity":1,"message":"203","line":68,"column":13,"nodeType":"163","messageId":"164","endLine":68,"endColumn":18},{"ruleId":"161","severity":1,"message":"203","line":97,"column":13,"nodeType":"163","messageId":"164","endLine":97,"endColumn":18},{"ruleId":"188","severity":1,"message":"189","line":31,"column":38,"nodeType":"190","messageId":"191","endLine":31,"endColumn":40},{"ruleId":"188","severity":1,"message":"189","line":92,"column":33,"nodeType":"190","messageId":"191","endLine":92,"endColumn":35},{"ruleId":"188","severity":1,"message":"189","line":125,"column":33,"nodeType":"190","messageId":"191","endLine":125,"endColumn":35},{"ruleId":"179","severity":1,"message":"180","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":7,"endColumn":4},{"ruleId":"188","severity":1,"message":"204","line":13,"column":35,"nodeType":"190","messageId":"205","endLine":13,"endColumn":37},{"ruleId":"161","severity":1,"message":"206","line":11,"column":10,"nodeType":"163","messageId":"164","endLine":11,"endColumn":17},{"ruleId":"161","severity":1,"message":"207","line":11,"column":19,"nodeType":"163","messageId":"164","endLine":11,"endColumn":28},{"ruleId":"161","severity":1,"message":"208","line":1,"column":8,"nodeType":"163","messageId":"164","endLine":1,"endColumn":13},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'Alert' is defined but never used.","'withCookies' is defined but never used.","'useCookies' is defined but never used.","'NoteCard' is defined but never used.","'AddIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'Fade' is defined but never used.","'CloseIcon' is defined but never used.","'TextField' is defined but never used.","'ColorDots' is defined but never used.","'theme' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'useState' is defined but never used.","'MuiThemeProvider' is defined but never used.","'createMuiTheme' is defined but never used.","'logout' is defined but never used.","'Redirect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'createdBy' is assigned a value but never used.","'useSelector' is defined but never used.","'NavBar' is defined but never used.","'storeNotes' is defined but never used.","'NotesBlock' is defined but never used.","'Cookies' is defined but never used.","'ErrorRounded' is defined but never used.","'token' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'cookies' is assigned a value but never used.","'setCookie' is assigned a value but never used.","'react' is defined but never used.","no-global-assign","no-unsafe-negation"]